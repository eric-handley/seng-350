services:
  client:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./src/client:/app
      - ./src/client/node_modules:/app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    dns:
      - 1.1.1.1
      - 8.8.8.8
    command: ["sh", "-c", "echo 'Installing/updating client dependencies...' && npm install && echo 'Starting client dev server...' && npm run dev"]

  server:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./src/server:/app
      - ./src/server/node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - PGHOST=db
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    dns:
      - 1.1.1.1
      - 8.8.8.8
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["sh", "-c", "echo 'Installing/updating server dependencies...' && npm install && echo 'Starting NestJS dev server...' && npm run dev"]

  db:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  db-data:
  redis-data:
